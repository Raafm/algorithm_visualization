

edge_dict =   {
((380, 294), (346, 251)): 54, 
((346, 251), (325, 190)): 64, 
((325, 190), (307, 135)): 57, 
((307, 135), (260, 115)): 51, 
((260, 115), (175, 71)): 95, 
((175, 71),   (109, 81)): 66, 
((109, 81),   (54, 49)): 63, 
((260, 115),  (217, 153)): 57, 
((217, 153),  (141, 152)): 76, 
((141, 152),  (76, 179)): 70, 
((141, 152),  (75, 117)): 74, 
((109, 81),  (75, 117)): 49, 
((175, 71), (75, 117)): 110, 
((217, 153), (204, 200)): 48, 
((204, 200), (142, 244)): 76, 
((142, 244), (75, 237)): 67, 
((204, 200), (76, 179)): 129, 
((346, 251), (271, 255)): 75, 
((271, 255), (204, 200)): 86, 
((380, 294), (349, 317)): 38, 
((349, 317), (295, 353)): 64, 
((295, 353), (215, 354)): 80, 
((215, 354), (156, 396)): 72, 
((156, 396), (131, 434)): 45, 
((131, 434), (116, 509)): 76, 
((116, 509), (77, 542)): 51, 
((76, 179), (34, 227)): 63, 
((83, 301), (34, 227)): 88, 
((75, 237), (34, 227)): 42, 
((83, 301), (72, 377)): 76, 
((131, 434), (72, 377)): 82, 
((131, 434), (86, 450)): 47, 
((295, 353), (243, 296)): 77, 
((243, 296), (176, 326)): 73, 
((176, 326), (129, 285)): 62, 
((129, 285), (83, 301)): 48, 
((349, 317), (352, 368)): 51, 
((352, 368), (382, 408)): 50, 
((382, 408), (400, 454)): 49, 
((400, 454), (351, 477)): 54, 
((351, 477), (297, 453)): 59, 
((297, 453), (257, 463)): 41, 
((257, 463), (244, 520)): 58, 
((244, 520), (276, 547)): 41, 
((297, 453), (246, 406)): 69, 
((246, 406), (197, 449)): 65, 
((197, 449), (215, 491)): 45, 
((197, 449), (154, 510)): 74, 
((154, 510), (186, 552)): 52, 
((215, 491), (244, 520)): 41, 
((244, 520), (217, 540)): 33, 
((217, 540), (186, 552)): 33, 
((352, 368), (452, 349)): 101, 
((452, 349), (507, 370)): 58, 
((507, 370), (525, 448)): 80, 
((525, 448), (583, 464)): 60, 
((583, 464), (672, 456)): 89, 
((672, 456), (672, 530)): 74, 
((400, 454), (440, 501)): 61, 
((440, 501), (498, 518)): 60, 
((498, 518), (535, 550)): 48, 
((382, 408), (452, 436)): 75, 
((507, 370), (452, 436)): 85, 
((583, 464), (498, 518)): 100, 
((498, 518), (591, 523)): 93, 
((591, 523), (618, 563)): 48, 
((346, 251), (400, 226)): 59, 
((400, 226), (440, 140)): 94, 
((440, 140), (417, 94)): 51, 
((417, 94), (373, 50)): 62, 
((440, 140), (516, 125)): 77, 
((516, 125), (568, 65)): 79, 
((568, 65), (632, 93)): 69, 
((632, 93), (681, 65)): 56, 
((417, 94), (477, 43)): 78, 
((477, 43), (536, 33)): 59, 
((568, 65), (536, 33)): 45, 
((417, 94), (351, 95)): 66, 
((351, 95), (279, 56)): 81, 
((632, 93), (595, 127)): 50, 
((595, 127), (634, 171)): 58, 
((634, 171), (691, 142)): 63, 
((516, 125), (530, 178)): 54, 
((530, 178), (577, 206)): 54, 
((577, 206), (601, 257)): 56, 
((440, 140), (482, 212)): 83, 
((482, 212), (459, 262)): 55, 
((482, 212), (532, 241)): 57, 
((532, 241), (529, 285)): 44, 
((530, 178), (532, 241)): 63, 
((459, 262), (483, 309)): 52, 
((483, 309), (549, 334)): 70, 
((549, 334), (589, 313)): 45, 
((601, 257), (589, 313)): 57, 
((529, 285), (589, 313)): 66, 
((532, 241), (601, 257)): 70, 
((601, 257), (656, 260)): 55, 
((656, 260), (651, 312)): 52, 
((651, 312), (605, 352)): 60, 
((605, 352), (651, 388)): 58, 
((483, 309), (507, 370)): 65, 
((507, 370), (565, 397)): 63, 
((605, 352), (565, 397)): 60, 
((656, 260), (670, 207)): 54, 
((670, 207), (691, 142)): 68
}



from math import hypot # to the distance function
def distance(node1,node2):
    return hypot(node1[0]-node2[0], node1[1]-node2[1])

def atribute_distance():
    for node1,node2 in edge_dict:
        edge_dict[(node1,node2)] = int(distance(node1,node2))   

    print("edge_dict =  ", edge_dict)

def show_weight(peso,position,font,peso_color = (0,255,255)):
    text = font.render(str(peso),True,peso_color)
    screen.blit(text,position)

def median_point(p1,p2):
    return ((p1[0] + p2[0])/2, (p1[1] + p2[1])/2)




if __name__ == "__main__":

    from math import hypot
    from normal import graph,node_list
    from color import *
    import pygame,time
        
    pygame.init()


    screen_height = 700
    screnn_width = 1000
    screen = pygame.display.set_mode((screnn_width,screen_height))

    screen.fill((0,0,0))
    number_size = 12
    peso_color = Cyan

    font = pygame.font.Font('freesansbold.ttf',number_size)

    for node1,node2 in edge_dict: 
        peso = edge_dict[(node1,node2)]
                                                          # draw edges
        pygame.draw.line(screen,(255,255,255), node1, node2, 2)
        show_weight(peso,median_point(node1,node2),font)

    for node in node_list:                                                          # draw nodes
        pygame.draw.circle(screen,  (0,0,255), node, 5)

    pygame.display.update()


    pause = True
    while True:

        
            # pygame stuff:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()                   #exit pygame,
                quit()                          #exit() program


            
            if event.type == pygame.KEYDOWN:        
                if event.key == pygame.K_SPACE:     #press breakspace to pause or play
                    pause = not pause   
                    time.sleep(0.2)